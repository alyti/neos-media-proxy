/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.3
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GeneralCommand {
    /// This exists simply to identify a set of known commands.
    #[serde(rename = "Name", skip_serializing_if = "Option::is_none")]
    pub name: Option<Box<crate::models::GeneralCommandType>>,
    #[serde(rename = "ControllingUserId", skip_serializing_if = "Option::is_none")]
    pub controlling_user_id: Option<String>,
    #[serde(rename = "Arguments", skip_serializing_if = "Option::is_none")]
    pub arguments: Option<::std::collections::HashMap<String, String>>,
}

impl GeneralCommand {
    pub fn new() -> GeneralCommand {
        GeneralCommand {
            name: None,
            controlling_user_id: None,
            arguments: None,
        }
    }
}


