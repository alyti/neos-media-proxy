/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.3
 *
 * Generated by: https://openapi-generator.tech
 */

use std::fmt;

/// PlaystateCommand : Enum PlaystateCommand.

/// Enum PlaystateCommand.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PlaystateCommand {
    #[serde(rename = "Stop")]
    Stop,
    #[serde(rename = "Pause")]
    Pause,
    #[serde(rename = "Unpause")]
    Unpause,
    #[serde(rename = "NextTrack")]
    NextTrack,
    #[serde(rename = "PreviousTrack")]
    PreviousTrack,
    #[serde(rename = "Seek")]
    Seek,
    #[serde(rename = "Rewind")]
    Rewind,
    #[serde(rename = "FastForward")]
    FastForward,
    #[serde(rename = "PlayPause")]
    PlayPause,
}

impl fmt::Display for PlaystateCommand {
    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
        let x = match self {
            Self::Stop => String::from("Stop"),
            Self::Pause => String::from("Pause"),
            Self::Unpause => String::from("Unpause"),
            Self::NextTrack => String::from("NextTrack"),
            Self::PreviousTrack => String::from("PreviousTrack"),
            Self::Seek => String::from("Seek"),
            Self::Rewind => String::from("Rewind"),
            Self::FastForward => String::from("FastForward"),
            Self::PlayPause => String::from("PlayPause"),
        };
        write!(f, "{}", x)
    }
}

impl Default for PlaystateCommand {
    fn default() -> PlaystateCommand {
        Self::Stop
    }
}
