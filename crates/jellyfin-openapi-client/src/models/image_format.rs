/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.3
 *
 * Generated by: https://openapi-generator.tech
 */

use std::fmt;

/// ImageFormat : Enum ImageOutputFormat.

/// Enum ImageOutputFormat.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ImageFormat {
    #[serde(rename = "Bmp")]
    Bmp,
    #[serde(rename = "Gif")]
    Gif,
    #[serde(rename = "Jpg")]
    Jpg,
    #[serde(rename = "Png")]
    Png,
    #[serde(rename = "Webp")]
    Webp,
}

impl fmt::Display for ImageFormat {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        let x = match self {
            Self::Bmp => String::from("Bmp"),
            Self::Gif => String::from("Gif"),
            Self::Jpg => String::from("Jpg"),
            Self::Png => String::from("Png"),
            Self::Webp => String::from("Webp"),
        };
        write!(f, "{}", x)
    }
}

impl Default for ImageFormat {
    fn default() -> ImageFormat {
        Self::Bmp
    }
}
